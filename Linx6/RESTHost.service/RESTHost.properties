{
  "Id": "01uk",
  "Name": "RESTHost",
  "ServiceData": {
    "Properties": [
      {
        "Id": "After operation",
        "Type": "Compiled:Boolean",
        "ValueUsage": "DesignTime",
        "Value": false
      },
      {
        "Id": "API definition",
        "Type": "Compiled:String",
        "ValueUsage": "DesignTime",
        "Value": "openapi: 3.0.2\r\n\r\ninfo:\r\n  description: |-\r\n    This is a sample Linx Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about\r\n    Swagger at [http://swagger.io](http://swagger.io). We have used Linx to produce this swagger documentation.  The Linx sample can be found [here](https://github.com/linx-software/petstore-api)\r\n    \r\n    Some useful links:\r\n    - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\r\n    - [Linx RESTHost plugin](https://linx.software/docs/reference/plugins/rest/overview/?utm_source=linx&utm_medium=designer&utm_campaign=help)\r\n  version: Built with Linx version 5.21.1.0 \r\n  title: Linx integration with Swagger Petstore - OpenAPI 3.0\r\n  \r\ntags:\r\n  - name: pet\r\n    description: Everything about your Pets\r\n    externalDocs:\r\n      description: Find out more\r\n      url: 'http://swagger.io'\r\n  - name: store\r\n    description: Operations about user\r\n  - name: user\r\n    description: Access to Petstore orders\r\n    externalDocs:\r\n      description: Find out more about our store\r\n      url: 'http://swagger.io'\r\npaths:\r\n  /pet:\r\n    post:\r\n      tags:\r\n        - pet\r\n      summary: Add a new pet to the store\r\n      description: Add a new pet to the store\r\n      operationId: addPet\r\n      responses:\r\n        '200':\r\n          description: Successful operation\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/Pet'\r\n        '405':\r\n          description: Invalid input\r\n      \r\n      requestBody:\r\n        description: Create a new pet in the store\r\n        required: true\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/Pet'\r\n\r\n    put:\r\n      tags:\r\n        - pet\r\n      summary: Update an existing pet\r\n      description: Update an existing pet by Id\r\n      operationId: updatePet\r\n      responses:\r\n        '200':\r\n          description: Successful operation\r\n          content:\r\n            \r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/Pet'\r\n        '400':\r\n          description: Invalid ID supplied\r\n        '404':\r\n          description: Pet not found\r\n        '405':\r\n          description: Validation exception\r\n      \r\n      requestBody:\r\n        description: Update an existent pet in the store\r\n        required: true\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/Pet'\r\n\r\n  /pet/findByStatus:\r\n    get:\r\n      tags:\r\n        - pet\r\n      summary: Finds Pets by status\r\n      description: Multiple status values can be provided with comma separated strings\r\n      operationId: findPetsByStatus\r\n      parameters:\r\n        - name: status\r\n          in: query\r\n          description: Status values that need to be considered for filter\r\n          required: false\r\n          explode: true\r\n          schema:\r\n            type: string\r\n            enum:\r\n              - available\r\n              - pending\r\n              - sold\r\n            default: available\r\n      responses:\r\n        '200':\r\n          description: successful operation\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/Pets'\r\n        '400':\r\n          description: Invalid status value\r\n      \r\n  /pet/findByTags:\r\n    get:\r\n      tags:\r\n        - pet\r\n      summary: Finds Pets by tags\r\n      description: >-\r\n        Multiple tags can be provided with comma separated strings. Use tag1,\r\n        tag2, tag3 for testing.\r\n      operationId: findPetsByTags\r\n      parameters:\r\n        - name: tags\r\n          in: query\r\n          description: Tags to filter by\r\n          required: false\r\n          explode: true\r\n          schema:\r\n            type: array\r\n            items:\r\n              type: string\r\n      responses:\r\n        '200':\r\n          description: successful operation\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/Pets'\r\n        '400':\r\n          description: Invalid tag value\r\n      \r\n  '/pet/{petId}':\r\n    get:\r\n      tags:\r\n        - pet\r\n      summary: Find pet by ID\r\n      description: Returns a single pet\r\n      operationId: getPetById\r\n      parameters:\r\n        - name: petId\r\n          in: path\r\n          description: ID of pet to return\r\n          required: true\r\n          schema:\r\n            type: integer\r\n            format: int64\r\n      responses:\r\n        '200':\r\n          description: successful operation\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/PetResponse'\r\n        '400':\r\n          description: Invalid ID supplied\r\n        '404':\r\n          description: Pet not found\r\n      \r\n    post:\r\n      tags:\r\n        - pet\r\n      summary: Updates a pet in the store with form data\r\n      description: ''\r\n      operationId: updatePetWithForm\r\n      parameters:\r\n        - name: petId\r\n          in: path\r\n          description: ID of pet that needs to be updated\r\n          required: true\r\n          schema:\r\n            type: integer\r\n            format: int64\r\n        - name: name\r\n          in: query\r\n          description: Name of pet that needs to be updated\r\n          schema:\r\n            type: string\r\n        - name: status\r\n          in: query\r\n          description: Status of pet that needs to be updated\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '405':\r\n          description: Invalid input\r\n      \r\n    delete:\r\n      tags:\r\n        - pet\r\n      summary: Deletes a pet\r\n      description: ''\r\n      operationId: deletePet\r\n      parameters:\r\n        - name: api_key\r\n          in: header\r\n          description: ''\r\n          required: false\r\n          schema:\r\n            type: string\r\n        - name: petId\r\n          in: path\r\n          description: Pet id to delete\r\n          required: true\r\n          schema:\r\n            type: integer\r\n            format: int64\r\n      responses:\r\n        '400':\r\n          description: Invalid ID supplied\r\n        '404':\r\n          description: Delete failed\r\n\r\n      \r\n  '/pet/{petId}/uploadImage':\r\n    post:\r\n      tags:\r\n        - pet\r\n      summary: uploads an image\r\n      description: ''\r\n      operationId: uploadFile\r\n      parameters:\r\n        - name: petId\r\n          in: path\r\n          description: ID of pet to update\r\n          required: true\r\n          schema:\r\n            type: integer\r\n            format: int64\r\n        - name: additionalMetadata\r\n          in: query\r\n          description: Additional Metadata\r\n          required: false\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: successful operation\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/ApiResponse'\r\n      requestBody:\r\n        content:\r\n          application/octet-stream:\r\n            schema:\r\n              type: string\r\n              format: binary\r\n      \r\n  /store/inventory:\r\n   get:\r\n      tags:\r\n        - store\r\n      summary: Returns pet inventories by status\r\n      description: Returns a map of status codes to quantities\r\n      operationId: getInventory\r\n      x-swagger-router-controller: OrderController\r\n      responses:\r\n        '200':\r\n          description: successful operation\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/Inventory'\r\n      \r\n  /store/order:\r\n    post:\r\n      tags:\r\n        - store\r\n      summary: Place an order for a pet\r\n      description: Place a new order in the store\r\n      operationId: placeOrder\r\n      x-swagger-router-controller: OrderController\r\n      responses:\r\n        '200':\r\n          description: successful operation\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/Order'\r\n        '405':\r\n          description: Invalid input\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/Order'\r\n          \r\n  '/store/order/{orderId}':\r\n    get:\r\n      tags:\r\n        - store\r\n      summary: Find purchase order by ID\r\n      x-swagger-router-controller: OrderController\r\n      description: >-\r\n        For valid response try integer IDs with value <= 5 or > 10. Other values\r\n        will generated exceptions\r\n      operationId: getOrderById\r\n      parameters:\r\n        - name: orderId\r\n          in: path\r\n          description: ID of order that needs to be fetched\r\n          required: true\r\n          schema:\r\n            type: integer\r\n            format: int64\r\n      responses:\r\n        '200':\r\n          description: successful operation\r\n          content:\r\n            \r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/Order'\r\n        '400':\r\n          description: Invalid ID supplied\r\n        '404':\r\n          description: Order not found\r\n    delete:\r\n      tags:\r\n        - store\r\n      summary: Delete purchase order by ID\r\n      x-swagger-router-controller: OrderController\r\n      description: >-\r\n        For valid response try integer IDs with value < 1000. Anything above\r\n        1000 or nonintegers will generate API errors\r\n      operationId: deleteOrder\r\n      parameters:\r\n        - name: orderId\r\n          in: path\r\n          description: ID of the order that needs to be deleted\r\n          required: true\r\n          schema:\r\n            type: integer\r\n            format: int64\r\n      responses:\r\n        '400':\r\n          description: Invalid ID supplied\r\n        '404':\r\n          description: Pet not found\r\n  /user:\r\n    post:\r\n      tags:\r\n        - user\r\n      summary: Create user\r\n      description: This can only be done by the logged in user.\r\n      operationId: createUser\r\n      responses:\r\n        '200':\r\n          description: successful operation\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/User'\r\n            \r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/User'\r\n        description: Created user object\r\n  /user/createWithList:\r\n    post:\r\n      tags:\r\n        - user\r\n      summary: Creates list of users with given input array\r\n      description: 'Creates list of users with given input array'\r\n      x-swagger-router-controller: UserController\r\n      operationId: createUsersWithListInput\r\n      responses:\r\n        '200':\r\n          description: Successful operation\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/Users'\r\n        \r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              type: array\r\n              items:\r\n                $ref: '#/components/schemas/User'\r\n  /user/login:\r\n    get:\r\n      tags:\r\n        - user\r\n      summary: Logs user into the system\r\n      description: ''\r\n      operationId: loginUser\r\n      parameters:\r\n        - name: username\r\n          in: query\r\n          description: The user name for login\r\n          required: false\r\n          schema:\r\n            type: string\r\n        - name: password\r\n          in: query\r\n          description: The password for login in clear text\r\n          required: false\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: successful operation\r\n          headers:\r\n            X-Rate-Limit:\r\n              description: calls per hour allowed by the user\r\n              schema:\r\n                type: integer\r\n                format: int32\r\n            X-Expires-After:\r\n              description: date in UTC when token expires\r\n              schema:\r\n                type: string\r\n                format: date-time\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: string\r\n        '400':\r\n          description: Invalid username/password supplied\r\n  /user/logout:\r\n    get:\r\n      tags:\r\n        - user\r\n      summary: Logs out current logged in user session\r\n      description: ''\r\n      operationId: logoutUser\r\n      parameters: []\r\n      responses:\r\n        default:\r\n          description: successful operation\r\n  '/user/{username}':\r\n    get:\r\n      tags:\r\n        - user\r\n      summary: Get user by user name\r\n      description: ''\r\n      operationId: getUserByName\r\n      parameters:\r\n        - name: username\r\n          in: path\r\n          description: 'The name that needs to be fetched. Use user1 for testing. '\r\n          required: true\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: successful operation\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/User'\r\n        '400':\r\n          description: Invalid username supplied\r\n        '404':\r\n          description: User not found\r\n    put:\r\n      tags:\r\n        - user\r\n      summary: Update user\r\n      x-swagger-router-controller: UserController\r\n      description: This can only be done by the logged in user.\r\n      operationId: updateUser\r\n      parameters:\r\n        - name: username\r\n          in: path\r\n          description: name that need to be deleted\r\n          required: true\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: successful operation\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: '#/components/schemas/User'\r\n      requestBody:\r\n        description: Update an existent user in the store\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/User'\r\n          \r\n          \r\n    delete:\r\n      tags:\r\n        - user\r\n      summary: Delete user\r\n      description: This can only be done by the logged in user.\r\n      operationId: deleteUser\r\n      parameters:\r\n        - name: username\r\n          in: path\r\n          description: The name that needs to be deleted\r\n          required: true\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '400':\r\n          description: Invalid username supplied\r\n        '404':\r\n          description: User not found\r\nexternalDocs:\r\n  description: Find out more about Swagger\r\n  url: 'http://swagger.io'\r\ncomponents:\r\n  schemas:\r\n    Order:\r\n      x-swagger-router-model: io.swagger.petstore.model.Order\r\n      properties:\r\n        id:\r\n          type: integer\r\n          format: int64\r\n          example: 10\r\n        petId:\r\n          type: integer\r\n          format: int64\r\n          example: 198772\r\n        quantity:\r\n          type: integer\r\n          format: int32\r\n          example: 7\r\n        shipDate:\r\n          type: string\r\n          format: date-time\r\n        status:\r\n          type: string\r\n          description: Order Status\r\n          enum:\r\n            - placed\r\n            - approved\r\n            - delivered\r\n          example: approved\r\n        complete:\r\n          type: boolean\r\n      type: object\r\n    \r\n    Category:\r\n      x-swagger-router-model: io.swagger.petstore.model.Category\r\n      properties:\r\n        id:\r\n          type: integer\r\n          format: int64\r\n          example: 1\r\n        name:\r\n          type: string\r\n          example: Dogs\r\n      type: object\r\n    User:     \r\n      properties:\r\n        id:\r\n          type: integer\r\n          format: int64\r\n          example: 10\r\n        username:\r\n          type: string\r\n          example: theUser\r\n        firstName:\r\n          type: string\r\n          example: John\r\n        lastName:\r\n          type: string\r\n          example: James\r\n        email:\r\n          type: string\r\n          example: john@email.com\r\n        password:\r\n          type: string\r\n          example: 12345\r\n        phone:\r\n          type: string\r\n          example: 12345\r\n        userStatus:\r\n          type: integer\r\n          format: int32\r\n          example: 1\r\n          description: User Status\r\n      type: object\r\n\r\n    Users:\r\n      type: array\r\n      items:\r\n            $ref: '#/components/schemas/User'\r\n    Tag:\r\n      x-swagger-router-model: io.swagger.petstore.model.Tag\r\n      properties:\r\n        id:\r\n          type: integer\r\n          format: int64\r\n        name:\r\n          type: string\r\n      type: object\r\n    Pet:\r\n      x-swagger-router-model: io.swagger.petstore.model.Pet\r\n      required:\r\n        - name\r\n        - photoUrls\r\n      properties:\r\n        id:\r\n          type: integer\r\n          format: int64\r\n          example: 10\r\n        name:\r\n          type: string\r\n          example: doggie\r\n        category:\r\n          $ref: '#/components/schemas/Category'\r\n        photoUrls:\r\n          type: array\r\n          items:\r\n            type: string            \r\n        tags:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/Tag'\r\n            \r\n        status:\r\n          type: string\r\n          description: pet status in the store\r\n          enum:\r\n            - available\r\n            - pending\r\n            - sold\r\n      type: object\r\n    ApiResponse:\r\n      properties:\r\n        code:\r\n          type: integer\r\n          format: int32\r\n        type:\r\n          type: string\r\n        message:\r\n          type: string\r\n      type: object\r\n    \r\n    PetResponse:\r\n      properties:\r\n        id:\r\n          type: integer\r\n        name:\r\n          type: string\r\n        category:\r\n          $ref: '#/components/schemas/Category'\r\n        photoUrls:\r\n          type: array\r\n          items:\r\n            type: string\r\n        tags:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/Tag'\r\n        status:\r\n          type: string\r\n      type: object\r\n\r\n\r\n      \r\n    Pets:\r\n      type: array\r\n      items:\r\n            $ref: '#/components/schemas/PetResponse'\r\n    \r\n    Inventory:\r\n      properties:\r\n        approved:\r\n          type: integer\r\n        placed:\r\n          type: integer\r\n        delivered:\r\n          type: integer\r\n      type: object"
      },
      {
        "Id": "API doc security scheme",
        "Type": "Compiled:String",
        "ValueUsage": "DesignTime",
        "Value": ""
      },
      {
        "Id": "API documentation",
        "Type": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.ApiDocumentation.ApiDocumentationType, Twenty57.Linx.Plugins.Rest, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null",
        "ValueUsage": "DesignTime",
        "Value": "SwaggerUI"
      },
      {
        "Id": "Auth config",
        "Type": "Compiled:System.Collections.Generic.List`1[[Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.AspNetCore.Authentication.AuthenticationConfiguration, Twenty57.Linx.Plugins.Rest, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e",
        "ValueUsage": "RuntimeRead",
        "Value": null
      },
      {
        "Id": "Authenticate",
        "Type": "Compiled:Boolean",
        "ValueUsage": "DesignTime",
        "Value": false
      },
      {
        "Id": "Base URI",
        "Type": "Compiled:String",
        "ValueUsage": "RuntimeRead",
        "Value": {
          "Expression": "(!$.Settings.LinxIsLocalDevEnv  ?   $.Settings.LinxApiBaseUri.Replace(\"http:\", \"https:\") + \":8080\" :   $.Settings.LinxApiBaseUri + \":\" + $.Settings.LinxApiPort) + \"/petstore\"",
          "CompiledExpression": "=(!{3}?{2}.Replace(\"http:\",\"https:\")+\":8080\":{1}+\":\"+{0})+\"/petstore\"",
          "Type": "Compiled:String"
        },
        "ValueType": "Linx.CSharpExpression"
      },
      {
        "Id": "Before operation",
        "Type": "Compiled:Boolean",
        "ValueUsage": "DesignTime",
        "Value": false
      },
      {
        "Id": "CORS origins",
        "Type": "Compiled:System.Collections.Generic.List`1[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e",
        "ValueUsage": "RuntimeRead",
        "Value": null
      },
      {
        "Id": "Max connections",
        "Type": "Compiled:System.Nullable`1[[System.Int64, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e",
        "ValueUsage": "RuntimeRead",
        "Value": null
      },
      {
        "Id": "Max request size",
        "Type": "Compiled:System.Nullable`1[[System.Int64, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e",
        "ValueUsage": "RuntimeRead",
        "Value": 30,
        "ValueType": "Int32"
      },
      {
        "Id": "Operation events",
        "Type": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.OperationEvents.OperationEventCollection, Twenty57.Linx.Plugins.Rest, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null",
        "ValueUsage": "DesignTime",
        "Value": []
      },
      {
        "Id": "Operations",
        "Type": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.OperationCollection, Twenty57.Linx.Plugins.Rest, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null",
        "ValueUsage": "DesignTime",
        "Value": [
          {
            "Name": "addPet",
            "HttpMethod": "POST",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "drEQ",
            "ResponseContentType": "application/json",
            "ReturnType": "Generated:drEQ"
          },
          {
            "Name": "updatePet",
            "HttpMethod": "PUT",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "aFsR",
            "ResponseContentType": "application/json",
            "ReturnType": "Generated:aFsR"
          },
          {
            "Name": "findPetsByStatus",
            "HttpMethod": "GET",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "WSEi",
            "ResponseContentType": "application/json",
            "ReturnType": "Generated:WSEi"
          },
          {
            "Name": "findPetsByTags",
            "HttpMethod": "GET",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "iGXH",
            "ResponseContentType": "application/json",
            "ReturnType": "Generated:iGXH"
          },
          {
            "Name": "getPetById",
            "HttpMethod": "GET",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "Nzc9",
            "ResponseContentType": "application/json",
            "ReturnType": "Generated:Nzc9"
          },
          {
            "Name": "updatePetWithForm",
            "HttpMethod": "POST",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "iBeK",
            "ResponseContentType": null,
            "ReturnType": "Generated:iBeK"
          },
          {
            "Name": "deletePet",
            "HttpMethod": "DELETE",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "KyQi",
            "ResponseContentType": null,
            "ReturnType": "Generated:KyQi"
          },
          {
            "Name": "uploadFile",
            "HttpMethod": "POST",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "kSQ5",
            "ResponseContentType": "application/json",
            "ReturnType": "Generated:kSQ5"
          },
          {
            "Name": "getInventory",
            "HttpMethod": "GET",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "JLJ9",
            "ResponseContentType": "application/json",
            "ReturnType": "Generated:JLJ9"
          },
          {
            "Name": "placeOrder",
            "HttpMethod": "POST",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "gtSc",
            "ResponseContentType": "application/json",
            "ReturnType": "Generated:gtSc"
          },
          {
            "Name": "getOrderById",
            "HttpMethod": "GET",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "SbgO",
            "ResponseContentType": "application/json",
            "ReturnType": "Generated:SbgO"
          },
          {
            "Name": "deleteOrder",
            "HttpMethod": "DELETE",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "cpuc",
            "ResponseContentType": null,
            "ReturnType": "Generated:cpuc"
          },
          {
            "Name": "createUser",
            "HttpMethod": "POST",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "xwps",
            "ResponseContentType": "application/json",
            "ReturnType": "Generated:xwps"
          },
          {
            "Name": "createUsersWithListInput",
            "HttpMethod": "POST",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "XD4s",
            "ResponseContentType": "application/json",
            "ReturnType": "Generated:XD4s"
          },
          {
            "Name": "loginUser",
            "HttpMethod": "GET",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "bHK0",
            "ResponseContentType": "application/json",
            "ReturnType": "Generated:bHK0"
          },
          {
            "Name": "logoutUser",
            "HttpMethod": "GET",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "iKJ7",
            "ResponseContentType": null,
            "ReturnType": "Generated:iKJ7"
          },
          {
            "Name": "getUserByName",
            "HttpMethod": "GET",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "scPI",
            "ResponseContentType": "application/json",
            "ReturnType": "Generated:scPI"
          },
          {
            "Name": "updateUser",
            "HttpMethod": "PUT",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "UEOh",
            "ResponseContentType": "application/json",
            "ReturnType": "Generated:UEOh"
          },
          {
            "Name": "deleteUser",
            "HttpMethod": "DELETE",
            "DefaultFormat": "Json",
            "Parameters": [],
            "ReturnTypeName": "iyIV",
            "ResponseContentType": null,
            "ReturnType": "Generated:iyIV"
          }
        ]
      },
      {
        "Id": "Show server errors",
        "Type": "Compiled:Boolean",
        "ValueUsage": "RuntimeRead",
        "Value": false
      }
    ],
    "Events": [
      {
        "Id": "addPet",
        "Name": "addPet",
        "Parameters": [
          {
            "Name": "body",
            "TypeReference": "Generated:lXCH"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:drEQ"
      },
      {
        "Id": "createUser",
        "Name": "createUser",
        "Parameters": [
          {
            "Name": "body",
            "TypeReference": "Generated:K83o"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:xwps"
      },
      {
        "Id": "createUsersWithListInput",
        "Name": "createUsersWithListInput",
        "Parameters": [
          {
            "Name": "body",
            "TypeReference": "List:Generated:8Kf7"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:XD4s"
      },
      {
        "Id": "deleteOrder",
        "Name": "deleteOrder",
        "Parameters": [
          {
            "Name": "orderId",
            "TypeReference": "Compiled:Int64"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:cpuc"
      },
      {
        "Id": "deletePet",
        "Name": "deletePet",
        "Parameters": [
          {
            "Name": "api_key",
            "TypeReference": "Compiled:String"
          },
          {
            "Name": "petId",
            "TypeReference": "Compiled:Int64"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:KyQi"
      },
      {
        "Id": "deleteUser",
        "Name": "deleteUser",
        "Parameters": [
          {
            "Name": "username",
            "TypeReference": "Compiled:String"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:iyIV"
      },
      {
        "Id": "findPetsByStatus",
        "Name": "findPetsByStatus",
        "Parameters": [
          {
            "Name": "status",
            "TypeReference": "Compiled:String"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:WSEi"
      },
      {
        "Id": "findPetsByTags",
        "Name": "findPetsByTags",
        "Parameters": [
          {
            "Name": "tags",
            "TypeReference": "List:Compiled:String"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:iGXH"
      },
      {
        "Id": "getInventory",
        "Name": "getInventory",
        "Parameters": [
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:JLJ9"
      },
      {
        "Id": "getOrderById",
        "Name": "getOrderById",
        "Parameters": [
          {
            "Name": "orderId",
            "TypeReference": "Compiled:Int64"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:SbgO"
      },
      {
        "Id": "getPetById",
        "Name": "getPetById",
        "Parameters": [
          {
            "Name": "petId",
            "TypeReference": "Compiled:Int64"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:Nzc9"
      },
      {
        "Id": "getUserByName",
        "Name": "getUserByName",
        "Parameters": [
          {
            "Name": "username",
            "TypeReference": "Compiled:String"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:scPI"
      },
      {
        "Id": "loginUser",
        "Name": "loginUser",
        "Parameters": [
          {
            "Name": "username",
            "TypeReference": "Compiled:String"
          },
          {
            "Name": "password",
            "TypeReference": "Compiled:String"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:bHK0"
      },
      {
        "Id": "logoutUser",
        "Name": "logoutUser",
        "Parameters": [
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:iKJ7"
      },
      {
        "Id": "placeOrder",
        "Name": "placeOrder",
        "Parameters": [
          {
            "Name": "body",
            "TypeReference": "Generated:BCqX"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:gtSc"
      },
      {
        "Id": "updatePet",
        "Name": "updatePet",
        "Parameters": [
          {
            "Name": "body",
            "TypeReference": "Generated:Cfgf"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:aFsR"
      },
      {
        "Id": "updatePetWithForm",
        "Name": "updatePetWithForm",
        "Parameters": [
          {
            "Name": "petId",
            "TypeReference": "Compiled:Int64"
          },
          {
            "Name": "name",
            "TypeReference": "Compiled:String"
          },
          {
            "Name": "status",
            "TypeReference": "Compiled:String"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:iBeK"
      },
      {
        "Id": "updateUser",
        "Name": "updateUser",
        "Parameters": [
          {
            "Name": "username",
            "TypeReference": "Compiled:String"
          },
          {
            "Name": "body",
            "TypeReference": "Generated:9l4l"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:UEOh"
      },
      {
        "Id": "uploadFile",
        "Name": "uploadFile",
        "Parameters": [
          {
            "Name": "petId",
            "TypeReference": "Compiled:Int64"
          },
          {
            "Name": "additionalMetadata",
            "TypeReference": "Compiled:String"
          },
          {
            "Name": "body",
            "TypeReference": "Compiled:System.Collections.Generic.List`1[[System.Byte, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e"
          },
          {
            "Name": "HttpContext",
            "TypeReference": "Compiled:Twenty57.Linx.Plugins.Rest.OpenAPIWebService.OpenAPI.Data.In.HttpContext, Twenty57.Linx.Plugins.Rest, Version=1.0.1.0, Culture=neutral, PublicKeyToken=null"
          }
        ],
        "Result": "Generated:kSQ5"
      }
    ]
  },
  "ServiceType": "REST:RESTHost",
  "Events": [
    "getInventory.event",
    "findPetsByStatus.event",
    "deleteOrder.event",
    "getOrderById.event",
    "updateUser.event",
    "addPet.event",
    "deletePet.event",
    "updatePetWithForm.event",
    "createUsersWithListInput.event",
    "uploadFile.event",
    "getPetById.event",
    "deleteUser.event",
    "loginUser.event",
    "updatePet.event",
    "logoutUser.event",
    "placeOrder.event",
    "getUserByName.event",
    "findPetsByTags.event",
    "createUser.event"
  ]
}